name: AuthManager workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build AuthExample
        env:
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild build -scheme AuthExample -workspace Auth.xcworkspace -destination "platform=$platform,name=$device"
      - name: Build FacebookAuth
        env:
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild build -scheme FacebookAuth -workspace Auth.xcworkspace -destination "platform=$platform,name=$device"
      - name: Build GoogleAuth
        env:
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild build -scheme GoogleAuth -workspace Auth.xcworkspace -destination "platform=$platform,name=$device"
      - name: Build CredentialAuth
        env:
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild build-for-testing -scheme CredentialAuth -workspace Auth.xcworkspace -destination "platform=$platform,name=$device"
      - name: Test CredentialAuth
        env:
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild test-without-building -scheme CredentialAuth -workspace Auth.xcworkspace -destination "platform=$platform,name=$device"
